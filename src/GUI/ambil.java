/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Database.koneksi;

/**
 *
 * @author HP
 */
public class ambil extends javax.swing.JFrame {

    /**
     * Creates new form ambil
     */
    DefaultTableModel model;
    public ambil() {
        initComponents();
        String [] Judul ={"Nama","Npm","Kelas","Prodi","Mata kuliah"};
        model = new DefaultTableModel(Judul,0);
        tabel.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfnama = new javax.swing.JTextField();
        tfnpm = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbprodi = new javax.swing.JComboBox<>();
        tfkelas = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        btnsimpan = new javax.swing.JButton();
        btnbatal = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        btnhapus = new javax.swing.JButton();
        tfsearch = new javax.swing.JTextField();
        btnsearch = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        tfmatkul = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Silahkan mengambil KRS");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Nama");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Npm");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Kelas");

        jLabel5.setText("Prodi");

        cbprodi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Teknik Informatika", "Sistem Informasi", "Manajemen", "Hukum", "Ilmu Politik", "Bahasa Inggris" }));

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabel);

        btnsimpan.setText("SIMPAN");
        btnsimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsimpanActionPerformed(evt);
            }
        });

        btnbatal.setText("BATAL");
        btnbatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbatalActionPerformed(evt);
            }
        });

        btnedit.setText("EDIT");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btnhapus.setText("HAPUS");
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });

        btnsearch.setText("SEARCH");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        jLabel6.setText("Mata Kuliah");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(222, 222, 222)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnsimpan)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnbatal)
                                        .addGap(215, 215, 215)
                                        .addComponent(btnedit))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(cbprodi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(tfnama)
                                            .addComponent(tfnpm)
                                            .addComponent(tfkelas, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                                            .addComponent(tfmatkul))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnhapus))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(tfsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(btnsearch)))
                        .addGap(105, 105, 105)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfnama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(tfnpm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfkelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbprodi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfmatkul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsimpan)
                    .addComponent(btnbatal)
                    .addComponent(btnedit)
                    .addComponent(btnhapus))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsearch))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsimpanActionPerformed
        // TODO add your handling code here:
        
    String nama = tfnama.getText();
    String npm = tfnpm.getText();
    String kelas = tfkelas.getText();
    String prodi = cbprodi.getSelectedItem().toString();
    String mataKuliah = tfmatkul.getText();

    try {
        // Mendapatkan koneksi ke database
        Connection connection = koneksi.GetConnection();

        String query = "INSERT INTO ambil (nama, npm, kelas, prodi, mata_kuliah) VALUES (?, ?, ?, ?, ?)";

        // Membuat objek PreparedStatement untuk menjalankan pernyataan SQL
        PreparedStatement preparedStatement = connection.prepareStatement(query);

        // Mengatur nilai parameter pada pernyataan SQL
        preparedStatement.setString(1, nama);
        preparedStatement.setString(2, npm);
        preparedStatement.setString(3, kelas);
        preparedStatement.setString(4, prodi);
        preparedStatement.setString(5, mataKuliah);

        // Menjalankan pernyataan SQL untuk menyimpan data
        int rowsAffected = preparedStatement.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "KRS TELAH DISIMPAN!!!");
            // Panggil metode untuk menampilkan data terbaru di tabel
            tampilkan();
        } else {
            JOptionPane.showMessageDialog(this, "GAGAL MENGAMBIL KRS");
        }

        // Tutup koneksi
        connection.close();
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan dalam koneksi database");
    }


        
        
    }//GEN-LAST:event_btnsimpanActionPerformed

    private void btnbatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbatalActionPerformed
        // TODO add your handling code here:
      
    tfnama.setText("");
    tfnpm.setText("");
    tfkelas.setText("");
    cbprodi.setSelectedIndex(0); 
    tfmatkul.setText("");


    }//GEN-LAST:event_btnbatalActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
String Nama = tfnama.getText();
String Npm = tfnpm.getText();
String Kelas = tfkelas.getText();
String Prodi = cbprodi.getSelectedItem().toString();
String Mata_kuliah = tfmatkul.getText();

DefaultTableModel model = (DefaultTableModel) tabel.getModel();
if (tabel.getSelectedRow() == -1) {
    if (tabel.getRowCount() == 0) {
        JOptionPane.showMessageDialog(null, "Tidak Ada Data Dalam Tabel");
    } else {
        JOptionPane.showMessageDialog(null, "Pilih data yang akan diubah");
    }
} else {
    model.setValueAt(Nama, tabel.getSelectedRow(), 0);
    model.setValueAt(Npm, tabel.getSelectedRow(), 1);
    model.setValueAt(Kelas, tabel.getSelectedRow(), 2);
    model.setValueAt(Prodi, tabel.getSelectedRow(), 3);
    model.setValueAt(Mata_kuliah, tabel.getSelectedRow(), 4);
}

try {
    // Mendapatkan koneksi ke database
    Connection connection = koneksi.GetConnection();

    // Membuat pernyataan SQL untuk mengupdate data di tabel
    String query = "UPDATE ambil SET Nama=?, Npm=?, Kelas=?, prodi=?, Mata_kuliah=? WHERE Npm=?";

    // Membuat objek PreparedStatement untuk menjalankan pernyataan SQL
    PreparedStatement preparedStatement = connection.prepareStatement(query);

    // Mengatur nilai parameter pada pernyataan SQL
    preparedStatement.setString(1, Nama);
    preparedStatement.setString(2, Npm);
    preparedStatement.setString(3, Kelas);
    preparedStatement.setString(4, Prodi);
    preparedStatement.setString(5, Mata_kuliah);
    preparedStatement.setString(6, Npm);

    // Menjalankan pernyataan SQL untuk mengupdate data
    int rowsAffected = preparedStatement.executeUpdate();

    if (rowsAffected > 0) {
        JOptionPane.showMessageDialog(this, "Data berhasil diupdate");
        // Panggil metode untuk menampilkan data terbaru di tabel
        tampilkan();
        // Mengosongkan nilai-nilai di TextField dan ComboBox setelah proses update
        tfnama.setText("");
        tfnpm.setText("");
        tfkelas.setText("");
        cbprodi.setSelectedIndex(0);
        tfmatkul.setText("");
    } else {
        JOptionPane.showMessageDialog(this, "Gagal mengupdate data");
    }

    // Tutup koneksi
    connection.close();
} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Terjadi kesalahan dalam koneksi database: " + e.getMessage());
    tampilkan();
}

    }//GEN-LAST:event_btneditActionPerformed

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
        // TODO add your handling code here:
    String npm = tfnpm.getText();

    DefaultTableModel model = (DefaultTableModel) tabel.getModel();
    if (tabel.getSelectedRow() == -1) {
        if (tabel.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Tidak Ada Data Dalam Tabel");
        } else {
            JOptionPane.showMessageDialog(null, "Pilih data yang akan dihapus");
        }
    } else {

        model.removeRow(tabel.getSelectedRow());

        Connection connection = null;
        try {

            connection = koneksi.GetConnection();

            String query = "DELETE FROM ambil WHERE npm=?";

            PreparedStatement preparedStatement = connection.prepareStatement(query);

            preparedStatement.setString(1, npm);

            int rowsAffected = preparedStatement.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                tampilkan();
                tfnama.setText("");
                tfnpm.setText("");
                tfkelas.setText("");
                cbprodi.setSelectedIndex(0);
                tfmatkul.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menghapus data");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan dalam koneksi database: " + e.getMessage());
        } finally {
           
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }



         
       
    }//GEN-LAST:event_btnhapusActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:
 
    String npmSearch = tfsearch.getText();

 
    DefaultTableModel model = (DefaultTableModel) tabel.getModel();
    model.setRowCount(0);

    try {
       
        Connection connection = koneksi.GetConnection();

        String query = "SELECT * FROM ambil WHERE npm LIKE ?";
 
        PreparedStatement preparedStatement = connection.prepareStatement(query);

        preparedStatement.setString(1, "%" + npmSearch + "%");

        ResultSet resultSet = preparedStatement.executeQuery();

        while (resultSet.next()) {
            String nama = resultSet.getString("nama");
            String npm = resultSet.getString("npm");
            String kelas = resultSet.getString("kelas");
            String prodi = resultSet.getString("prodi");
            String mataKuliah = resultSet.getString("mata_kuliah");

            model.addRow(new Object[]{nama, npm, kelas, prodi, mataKuliah});
        }

        connection.close();
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan dalam koneksi database: " + e.getMessage());
    }


    }//GEN-LAST:event_btnsearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ambil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ambil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ambil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ambil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ambil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnbatal;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnhapus;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btnsimpan;
    private javax.swing.JComboBox<String> cbprodi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabel;
    private javax.swing.JTextField tfkelas;
    private javax.swing.JTextField tfmatkul;
    private javax.swing.JTextField tfnama;
    private javax.swing.JTextField tfnpm;
    private javax.swing.JTextField tfsearch;
    // End of variables declaration//GEN-END:variables

    private void tampilkan() {
      
    try {
        // Mendapatkan koneksi ke database
        Connection connection = koneksi.GetConnection();

        // Membuat pernyataan SQL untuk mendapatkan data dari tabel
        String query = "SELECT * FROM ambil";
        PreparedStatement preparedStatement = connection.prepareStatement(query);

        // Eksekusi query dan dapatkan hasilnya
        ResultSet resultSet = preparedStatement.executeQuery();

        // Bersihkan model tabel
        model.setRowCount(0);

        // Iterasi melalui hasil dan tambahkan ke model tabel
        while (resultSet.next()) {
            Object[] row = {
                resultSet.getString("Nama"),
                resultSet.getString("Npm"),
                resultSet.getString("Kelas"),
                resultSet.getString("Prodi"),
                resultSet.getString("Mata_kuliah")
            };
            model.addRow(row);
        }

        // Tutup koneksi
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan dalam koneksi database: " + e.getMessage());
    }
}

   
}
